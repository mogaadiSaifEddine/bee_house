<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/security
             http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Enable Method Security -->
    <global-method-security pre-post-annotations="enabled"/>

    <!-- HTTP Security Configuration -->
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/login" access="permitAll"/>
        <intercept-url pattern="/resources/**" access="permitAll"/>
        <intercept-url pattern="/webjars/**" access="permitAll"/>
        <intercept-url pattern="/api/**" access="isAuthenticated()"/>
        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>

        <!-- OAuth2 Login Configuration -->
        <oauth2-login client-registration-repository-ref="clientRegistrationRepository"
                     authorized-client-service-ref="authorizedClientService"
                     login-page="/login"/>

        <!-- Logout Configuration -->
        <logout logout-success-url="/login?logout"
                delete-cookies="JSESSIONID"/>

        <!-- Session Management -->
        <session-management>
            <concurrency-control max-sessions="1"
                               expired-url="/login?expired"/>
        </session-management>

        <!-- CSRF Protection -->
        <csrf token-repository-ref="csrfTokenRepository"/>

        <!-- SSL Configuration -->
        <requires-channel url="/**" channel="https"/>
    </http>

    <!-- Authentication Manager -->
    <authentication-manager>
        <authentication-provider ref="oauth2AuthenticationProvider"/>
    </authentication-manager>

    <!-- OAuth2 Client Registration -->
    <beans:bean id="clientRegistrationRepository"
                class="org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository">
        <beans:constructor-arg>
            <beans:list>
                <beans:bean class="org.springframework.security.oauth2.client.registration.ClientRegistration">
                    <beans:property name="registrationId" value="google"/>
                    <beans:property name="clientId" value="${oauth2.client.id}"/>
                    <beans:property name="clientSecret" value="${oauth2.client.secret}"/>
                    <beans:property name="clientName" value="Google"/>
                    <beans:property name="authorizationGrantType" value="authorization_code"/>
                    <beans:property name="redirectUri" value="${oauth2.redirect.uri}"/>
                    <beans:property name="scopes" value="openid,profile,email"/>
                    <beans:property name="authorizationUri" value="https://accounts.google.com/o/oauth2/auth"/>
                    <beans:property name="tokenUri" value="https://www.googleapis.com/oauth2/v4/token"/>
                    <beans:property name="userInfoUri" value="https://www.googleapis.com/oauth2/v3/userinfo"/>
                    <beans:property name="userNameAttributeName" value="sub"/>
                    <beans:property name="jwkSetUri" value="https://www.googleapis.com/oauth2/v3/certs"/>
                </beans:bean>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <!-- OAuth2 Authorized Client Service -->
    <beans:bean id="authorizedClientService"
                class="org.springframework.security.oauth2.client.InMemoryOAuth2AuthorizedClientService">
        <beans:constructor-arg ref="clientRegistrationRepository"/>
    </beans:bean>

    <!-- OAuth2 Authentication Provider -->
    <beans:bean id="oauth2AuthenticationProvider"
                class="org.springframework.security.oauth2.client.authentication.OAuth2LoginAuthenticationProvider">
        <beans:constructor-arg ref="clientRegistrationRepository"/>
        <beans:constructor-arg ref="authorizedClientService"/>
    </beans:bean>

    <!-- CSRF Token Repository -->
    <beans:bean id="csrfTokenRepository"
                class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
        <beans:property name="headerName" value="X-CSRF-TOKEN"/>
    </beans:bean>
</beans:beans> 